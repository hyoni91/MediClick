<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="ordersMapper">
	<resultMap id="orders" type="com.green.MediClick.provider.customers.vo.OrdersVO">
        <id column="ORDER_NUM" property="orderNum"/>
        <result column="REQUEST_NUM" property="requestNum"/>
        <result column="ORDER_DATE" property="orderDate"/>
        <result column="ORDER_STATUS" property="orderStatus"/>
        <result column="TOTALPRICE" property="totalPrice"/>
        <result column="CUSTOMER_NAME" property="customerName" />
        <result column="CUSTOMER_ADDR" property="customerAddr" />
        <result column="PRODUCT_NUM" property="productNum" />
        <result column="QUANTITY" property="quantity" />
        <association property="orderRequest" resultMap="orderItemsMapper.request"/>
        <association property="customer" resultMap="customerMapper.customer" />
        <association property="delivery" resultMap="deliveryMapper.delivery"/>
    </resultMap>

    <!--수주 목록 -->
    <select id="orders" resultMap="orders">
        SELECT
        ORDER_NUM
        ,O.REQUEST_NUM
        ,ORDER_DATE
        ,ORDER_STATUS
        ,C.CUSTOMER_NUM
        ,C.CUSTOMER_NAME
        ,(R.QUANTITY * P.PRODUCT_PRICE) as TOTALPRICE
        ,P.PRODUCT_NUM
        FROM order_requests R, orders O , customers C, products P
        WHERE O.REQUEST_NUM = R.REQUEST_NUM
        AND R.CUSTOMER_NUM = C.CUSTOMER_NUM
        AND R.PRODUCT_NUM = P.PRODUCT_NUM
        <if test="searchValue != null and !searchValue.isEmpty()">
            AND (
            ORDER_DATE LIKE CONCAT('%', #{searchValue}, '%')
            OR ORDER_STATUS LIKE CONCAT ('%', #{searchValue}, '%')
            OR C.CUSTOMER_NAME LIKE CONCAT ('%', #{searchValue}, '%')
            )
        </if>
        GROUP BY ORDER_DATE
        ORDER BY R.REQUEST_NUM DESC
    </select>

    <!--해당 주문 -->
    <select id="orderDetail" resultMap="orders">
        SELECT C.CUSTOMER_NAME
        ,C.CUSTOMER_ADDR
        ,C.CUSTOMER_OWNER
        ,C.CUSTOMER_TEL
        ,O.ORDER_NUM
        ,O.ORDER_DATE
        ,P.PRODUCT_NAME
        ,R.PRODUCT_NUM
        ,R.QUANTITY
        , P.PRODUCT_PRICE
        ,(P.PRODUCT_PRICE * QUANTITY) AS PRODUCT_PRICE
        ,O.ORDER_STATUS
        FROM order_requests R , products P , orders O, customers C
        WHERE O.REQUEST_NUM = R.REQUEST_NUM
        AND C.CUSTOMER_NUM = R.CUSTOMER_NUM
        AND R.PRODUCT_NUM = P.PRODUCT_NUM
        AND O.ORDER_DATE = #{orderDate}
    </select>


    <update id="statusUpdate">
        UPDATE orders
        SET ORDER_STATUS = '배송완료'
        WHERE ORDER_NUM = #{orderNum}
    </update>


    <!-- 배송/수주테이블 '배송중'변경   트리거 사용 시 삭제예정-->
<!--    <update id="updateDeli">-->
<!--        UPDATE delivery-->
<!--        SET DELIVERY_STATUS = '배송중'-->
<!--        WHERE ORDER_NUM = #{orderNum}-->
<!--    </update>-->

    <!-- 수주테이블 배송신청 누르면 '배송중'변경-->
    <update id="updateOrders">
        <foreach collection="params.updateList" item="update" separator=",">
            UPDATE ORDERS
            SET ORDER_STATUS = '배송중'
            WHERE ORDER_NUM = #{orderNum}
        </foreach>
    </update>

    <!-- 수주 디테일에서 배송신청 누르면 deli테이블 insert-->
<!--    <insert id="deliInsert">-->
<!--        INSERT INTO delivery(-->
<!--        ORDER_NUM-->
<!--        ,DELIVERY_DRIVER_NAME-->
<!--        ,DELIVERY_DRIVER_PHONE-->
<!--        ,DELIVERY_ADDRESS-->
<!--        ,DELIVERY_STATUS-->
<!--        ) VALUES-->
<!--        <foreach collection="params.deliList" item="delivery" separator=",">-->
<!--            (-->
<!--            #{orderNum}-->
<!--            ,'김배달'-->
<!--            ,'010-1234-0000'-->
<!--            ,#{customerAddr}-->
<!--            ,'배송중'-->
<!--            )-->
<!--        </foreach>-->
<!--    </insert>-->

    <!--배송신청시 재고테이블 OUT-->
    <update id="outgoing">
        <foreach collection="params.outList" item="out" separator=",">
            UPDATE inventory
            SET OUTGOING_QTY = #{quantity}
            ,OUT_DATE = NOW()
            ,CURRENT_STOCK = CURRENT_STOCK - #{quantity}
            WHERE PRODUCT_NUM = #{productNum}
        </foreach>
    </update>

    <!--재고 입고 (아직 MVC없음 2024-10-08-->
    <update id="incoming">
        UPDATE inventory
        SET INCOMING_QTY = 100,
        CURRENT_STOCK = CURRENT_STOCK + 100
        WHERE INVENTORY_NUM = 6
    </update>

    <!--수주 : 배송대기 아이템 총 수량 -->
    <select id="sumQnt" resultType="int">
        SELECT IFNULL(SUM(QUANTITY), 0)
        FROM order_requests r , orders o
        WHERE r.REQUEST_NUM = o.REQUEST_NUM
        and PRODUCT_NUM = #{product_num}
        AND o.ORDER_STATUS = '배송대기'
    </select>

</mapper>































